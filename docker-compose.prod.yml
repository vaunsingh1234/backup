version: '3.8'

services:
  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bon-voyage-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl/certs
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - bon-voyage-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bon-voyage-postgres
    environment:
      POSTGRES_DB: tourist_safety_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - bon-voyage-network

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: bon-voyage-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongodb_prod_data:/data/db
    restart: unless-stopped
    networks:
      - bon-voyage-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bon-voyage-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_prod_data:/data
    restart: unless-stopped
    networks:
      - bon-voyage-network

  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bon-voyage-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD}@postgres:5432/tourist_safety_db
      MONGODB_URL: mongodb://admin:${MONGO_PASSWORD}@mongodb:27017/tourist_safety_mongo?authSource=admin
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - postgres
      - mongodb
      - redis
    restart: unless-stopped
    networks:
      - bon-voyage-network

volumes:
  postgres_prod_data:
  mongodb_prod_data:
  redis_prod_data:

networks:
  bon-voyage-network:
    driver: bridge
